<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		  	http://www.springframework.org/schema/aop
		  	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.directwebremoting.org/schema/spring-dwr
			http://www.directwebremoting.org/schema/spring-dwr-2.0.xsd"
    default-lazy-init="true">
    
    <!-- ============================  D A O  =========================== -->
   
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:/comp/env/jdbc/appdb"/>
    </bean>
    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>
    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <description>Transaction manager for JDBC datasource</description>
        <constructor-arg ref="dataSource" />
    </bean>
     
    <!-- ============================  M V C  ============================= -->
    
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
        	<list>
        		<value>it.advalso.gpd.web.view.resources.global</value>
        		<value>it.advalso.gpd.web.view.resources.errors</value>
        	</list>
        </property>
    </bean>
    
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
        <property name="defaultLocale" value="it_IT"/>
    </bean>
    
    <bean id="messageSourceAccessor"
    		class="org.springframework.context.support.MessageSourceAccessor">
    	<constructor-arg ref="messageSource" />
    </bean>
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<!-- Impostare la dim massima consentita dal mail server avio -->
    	<!-- <property name="maxUploadSize" value="2000000"/>  -->
	</bean>
    
    <bean name="webContext" class="it.advalso.gpd.web.context.WebContext">
        <constructor-arg>
        	<bean class="java.util.HashMap" scope="session">
    			<aop:scoped-proxy proxy-target-class="false"/>
    		</bean>
        </constructor-arg>
        <constructor-arg ref="messageSource" />
    </bean>
    
    <dwr:configuration />
	
    <!-- ===========  A S P E C T   C O N F I G U R A T I O N  ========== -->
    
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
            lazy-init="false">
        <description>
        	Creates AOP proxies based on all candidate Advisors in the current BeanFactory.
        </description>
        <property name="frozen" value="true" />
    </bean>
    
    <bean name="transactionAttributeSource"
    		class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
    	<description>
    		Defines mappings between method names and transaction attributes.
    	</description>
    	<property name="properties">
    		<props>
    			<prop key="create*">PROPAGATION_REQUIRED</prop>
    			<prop key="insert*">PROPAGATION_REQUIRED</prop>
    			<prop key="update*">PROPAGATION_REQUIRED</prop>
    			<prop key="delete*">PROPAGATION_REQUIRED</prop>
    			<prop key="exec*">PROPAGATION_REQUIRED</prop>
    			<prop key="write*">PROPAGATION_REQUIRED</prop>
    			<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
    			<prop key="search*">PROPAGATION_REQUIRED,readOnly</prop>
    			<prop key="list*">PROPAGATION_REQUIRED,readOnly</prop>
    			<prop key="fetch*">PROPAGATION_REQUIRED,readOnly</prop>
    			<prop key="read*">PROPAGATION_REQUIRED,readOnly</prop>
    		</props>
    	</property>
    </bean>
            
 
    
	<bean id="jdbcAttributeSourceAdvisor"
    		class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
    	<description>
        	AOP interceptor (Advice) which apply transactions to classes that extend BeanFactorySimpleJdbcDaoSupport.
        </description>
    	<property name="classFilter">
    		<bean class="org.springframework.aop.support.RootClassFilter">
    			<constructor-arg value="it.advalso.gpd.support.jdbc.BeanFactorySimpleJdbcDaoSupport" />
    		</bean>
    	</property>
    	<property name="transactionInterceptor">
    		<bean class="org.springframework.transaction.interceptor.TransactionInterceptor">
    			<property name="transactionManager" ref="transactionManager" />
    			<property name="transactionAttributeSource" ref="transactionAttributeSource" />
    		</bean>
    	</property>
    </bean>
    
    <!-- =========================  D O M A I N  ======================== -->
    
    <import resource="spring/attivita-beans.xml" />
    <import resource="spring/batch-beans.xml" />
    <import resource="spring/email-beans.xml" />
    <import resource="spring/global-beans.xml" />
    <import resource="spring/integration-beans.xml" />
    <import resource="spring/monitor-beans.xml" />
    <import resource="spring/services-beans.xml" />
    <import resource="spring/soggetto-beans.xml" />
    <import resource="spring/workflow-beans.xml" />
	<import resource="spring/worklist-beans.xml" />
	<import resource="spring/scheduler-beans.xml" />
	<import resource="spring/document-beans.xml" />
	<import resource="spring/pratica-beans.xml" />
	<import resource="spring/hibernateContext-beans.xml" />
	<import resource="spring/report-beans.xml" />
	<import resource="spring/user-beans.xml" />
	
	
	
</beans>
